<lib>
  <:define tag="sample-reactive-1" :title="Reactive HTML">
  <h4>
    <bs-icon :icon="code-square"/>
    [[title]]
  </h4>
  <title-spacer/>
  <p>
    In Reflect.js pages you can add
    <a href="docs/compiler#values">logic values</a>
    to any tag and use reactive JavaScript
    <a href="docs/compiler#expressions">expressions</a>
    in any attribute or text to reflect results in the page.
  </p>
  <bs-card :class-code-card="[[true]]" :mutedFooter="[[false]]" :footer=" ">

    <highlight-js style="margin-bottom: 0"
                  :lang="html"
                  :source='[[
`<div :count="[`+`[0]`+`]"
     :did-init="[`+`[
       setInterval(() => count++, 1000)
     ]`+`]">
  Seconds: [`+`[count]`+`]
</div>`
    ]]'/>

    <div :slot="footer" :count="[[0]]"
          :handle-count="[[
            window.setTimeout(() => count++, 1000)
          ]]">
      Seconds: [[count]]
    </div>
  </bs-card>
  <!--- <br/><a href="#">More on Reactivity</a><br/> -->
  </:define>
</lib>
